# -*- coding: utf-8 -*-
"""
Created on Fri Aug 21 15:27:37 2020

@author: eliot

The script checks the position file generated by the Virtual crop fields generator
made with Unity

-- DEPRECATED --
"""

import os
import matplotlib.pyplot as plt
import matplotlib.patches as patches
import numpy as np
from PIL import Image

# =============================================================================
# Utility Functions Definition
# =============================================================================
def import_data(_path, _file_names, _import_function):
    data = []
    for _n in _file_names:
        data += [_import_function(_path + "/" + _n)]
    return data

def get_img_array(path_img):
    img = Image.open(path_img)
    return np.array(img)

def get_file_lines(path_csv_file):
    file_object = open(path_csv_file, 'r')
    file_content = file_object.readlines()
    file_object.close()
    return(file_content)


# =============================================================================
# Task Specific Function Definition
# =============================================================================

def convert_to_image_position(_position_file, _image_width=1920, _image_height = 1080):
    positions = []
    corrected_positions = []
    for _line in _position_file:
        line_split = _line.split(",")[2:]
        
        computed_pos = [int(float(line_split[0])*_image_width),
                        _image_height-int(float(line_split[1])*_image_height)]
        corr_computed_pos = [abs(int(float(line_split[2])*_image_width)),
                             _image_height-abs(int(float(line_split[3])*_image_height))]
        
        positions += [computed_pos]
        corrected_positions += [corr_computed_pos]
    
    return positions, corrected_positions

def Show_Adjusted_Positions(_image, _pos, _corr_pos):
    
    fig, ax = plt.subplots(1)
    ax.imshow(_image)
    
    nb_pos = len(_pos)
    
    for i in range(nb_pos):
        [x, y] = _pos[i]
        circle = patches.Circle((x,y),
                                radius = 10,
                                linewidth = 3,
                                edgecolor = "r",
                                facecolor = "none")
        ax.add_patch(circle)
        
        [x, y] = _corr_pos[i]
        circle = patches.Circle((x,y),
                                radius = 10,
                                linewidth = 3,
                                edgecolor = "b",
                                facecolor = "none")
        ax.add_patch(circle)


if (__name__ == "__main__"):
    import_path="D:/Projet/Unity/HDRP_PGoCF/Datasets/2020_8_21_16_3_32"
    position_file_path = import_path+ "/Position_Files"
    images_file_path = import_path+"/virtual_reality"
    
    position_files_names = os.listdir(position_file_path)
    images_names = os.listdir(images_file_path)
    
    position_files = import_data(position_file_path,
                                 position_files_names,
                                 get_file_lines)
    images = import_data(images_file_path,
                         images_names,
                         get_img_array)
    
    positions, corr_positions = convert_to_image_position(position_files[0])
    
    Show_Adjusted_Positions(images[0], positions, corr_positions)
